# Project: junqo
# Description: Dockerfile for the development environment of the front-end application.

# Stage 1 - Install dependencies and build the app in a build environment
FROM debian:bullseye AS build-env

# Install flutter dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    wget \
    unzip \
    xz-utils \
    libgconf-2-4 \
    gdb \
    libstdc++6 \
    libglu1-mesa \
    fonts-droid-fallback \
    lib32stdc++6 \
    python3 \
    sed \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Flutter version 3.22.2
# See https://docs.flutter.dev/release/archive to change the version
WORKDIR /usr/local
ENV PATH="/usr/local/development/flutter/bin:${PATH}"
RUN wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.2-stable.tar.xz && \
    mkdir development && \
    tar -xf flutter_linux_3.22.2-stable.tar.xz -C development && \
    rm flutter_linux_3.22.2-stable.tar.xz && \
    flutter doctor -v

# Copy files to container and build
WORKDIR /app
COPY . .

# Set User to unprivileged user and build the app
RUN flutter build web

# Clean up unnecessary files to reduce image size
USER root
RUN rm -rf /usr/local/development

# Stage 2 - Create the run-time image
FROM nginx:1.21.1-alpine
COPY --from=build-env /app/build/web /usr/share/nginx/html
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80
